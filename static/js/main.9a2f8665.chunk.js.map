{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","contexts/LoadingState.js","contexts/ValidationContext.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/PopupWithImage.js","components/PopupWithSubmit.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","createContext","Card","card","onCardClick","onLikeButtonClick","onCardDeleteClick","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","id","link","name","onClick","type","_","length","Main","onEditProfile","onEditAvatar","onAddPlace","onCardLike","onDeleteCard","cards","avatar","about","map","Footer","LoadingState","ValidationContext","PopupWithForm","title","children","isOpen","onClose","onSubmit","buttonText","noClose","validationContext","loadingText","cn","isValid","AddPlacePopup","onInput","useRef","ref","minLength","maxLength","validation","placeholder","required","validationText","e","preventDefault","current","value","target","reset","EditAvatarPopup","onUpdateAvatar","EditProfilePopup","onUpdateUser","useState","setName","setAbout","useEffect","onChange","PopupWithImage","Фото","PopupWithSubmit","api","options","this","_headers","headers","_baseUrl","baseUrl","params","fetch","then","res","ok","json","Promise","reject","status","statusText","data","_sendRequest","method","body","JSON","stringify","srcLink","cardInfo","cardId","authorization","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isPopupWithSubmitOpen","setIsPopupWithSubmitOpen","selectedCard","setSelectedCard","setLoadingText","setCard","setCards","setCurrentUser","setvalidationContext","handleInput","validArr","textArr","index","Number","resValid","validity","valid","validationMessage","handleEscButton","key","closeAllPopups","stopPropagation","document","removeEventListener","all","getProfileInfo","getInitialCards","values","profileInfo","cardList","catch","err","console","log","Provider","addEventListener","changeLikeStatus","newCard","newCards","c","userInfo","editProfileInfo","user","editAvatar","createNewCard","deleteCard","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a2f8665.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Лого\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { createContext } from 'react'\r\nconst CurrentUserContext = createContext();\r\nexport default CurrentUserContext;","import { useContext } from 'react';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card,\r\n                onCardClick,\r\n                onLikeButtonClick,\r\n                onCardDeleteClick }) \r\n    {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    function handleCardClick() {\r\n        onCardClick(card)\r\n    }\r\n\r\n    const cardDeleteButtonClassName = `element__trash-button ${isOwn ? 'element__trash-button_visible' : ''}`;\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = `like__button ${isLiked ? 'like__button_pressed' : ''}`;\r\n \r\n    return (\r\n        <>\r\n            <div className=\"element\" id={card.id}>\r\n                <img className=\"element__image\" src={card.link} alt={`${card.name}.Фото`} onClick={handleCardClick} />\r\n                <button type=\"button\" className={cardDeleteButtonClassName} onClick={_ => onCardDeleteClick(card)}></button>\r\n                <h3 className=\"element__text\">{card.name}</h3>\r\n                <div className=\"like\">\r\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={_ => onLikeButtonClick(card)}></button>\r\n                    <p className=\"like__count\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card;","import { useContext } from 'react';\r\nimport Card from './Card';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Main({ \r\n            onEditProfile, \r\n            onEditAvatar, \r\n            onAddPlace,\r\n            onCardClick,\r\n            onCardLike,\r\n            onDeleteCard,\r\n            cards }) \r\n    {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"avatar\" onClick={onEditAvatar}>\r\n                    <img className=\"avatar__img\" src={currentUser.avatar} alt=\"Аватар\" />\r\n                    <div className=\"avatar__edit-icon\"></div>\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <div>\r\n                        <h1 className=\"profile-info__name\">{currentUser.name}</h1>\r\n                        <p className=\"profile-info__description\">{currentUser.about}</p>\r\n                    </div>\r\n                    <button type=\"button\" className=\"profile-info__edit-button\" onClick={onEditProfile}></button>\r\n                </div>\r\n                <button type=\"button\" className=\"add-image-button\" onClick={onAddPlace}></button>\r\n            </section>\r\n            \r\n            <section className=\"elements\">\r\n                \r\n                {cards.map((card) => {\r\n                    return(\r\n                        <Card \r\n                            key={card._id} \r\n                            card={card} \r\n                            onCardClick={onCardClick} \r\n                            onLikeButtonClick={onCardLike}\r\n                            onCardDeleteClick={onDeleteCard}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n            </section>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__logo\">© 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import { createContext } from 'react';\r\nconst LoadingState = createContext();\r\nexport default LoadingState;","import { createContext } from 'react';\r\nconst ValidationContext = createContext();\r\nexport default ValidationContext;","import cn from 'classnames';\r\nimport { useContext } from 'react';\r\nimport LoadingState from '../contexts/LoadingState';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\n\r\nfunction PopupWithForm({ \r\n                            name, \r\n                            title, \r\n                            children,\r\n                            isOpen,\r\n                            onClose,\r\n                            buttonText,\r\n                            onSubmit, \r\n                            noClose\r\n                        }) \r\n{\r\n    const validationContext = useContext(ValidationContext);\r\n    const loadingText = useContext(LoadingState);  \r\n\r\n    return (\r\n        <>\r\n            <section className={cn(`popup popup_type_${name}`, {'popup_opened' : isOpen})} onClick={onClose}>\r\n                <form className=\"popup-form\" name={name} onSubmit={onSubmit} onClick={noClose}>\r\n                    <button type=\"button\" name=\"Закрыть\" className=\"popup-form__close-button\" onClick={onClose}></button>\r\n                    <h3 className=\"popup-form__title\">{title}</h3>\r\n                    {children}\r\n                    <button className={cn(\"popup-form__submit-button\", {\"popup-form__submit-button_disabled\": !validationContext.isValid})} >{loadingText}</button>\r\n                </form>\r\n            </section>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import { useContext, useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport cn from 'classnames';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\n\r\nfunction AddPlacePopup({   \r\n                        isOpen, \r\n                        onClose, \r\n                        onAddPlace,\r\n                        noClose,\r\n                        onInput,\r\n                        }) \r\n    {\r\n\r\n    const validationContext = useContext(ValidationContext);    \r\n\r\n    const link = useRef('');\r\n    const name = useRef('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (validationContext.isValid) {\r\n            onAddPlace({\r\n                link: link.current.value,\r\n                name: name.current.value\r\n            });\r\n            e.target.reset();\r\n        }    \r\n    } \r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='place' \r\n            title='Новое место' \r\n            children={\r\n                <>\r\n                    <input onInput={onInput} ref={name} name=\"name\" id=\"0\" type=\"text\" minLength=\"1\" maxLength=\"40\" className={cn(\"popup-form__text-input\", {\"popup-form__text-input_type_error\": !validationContext.validation[0]})} placeholder=\"Название\" required />\r\n                    <span id=\"image-input-error\" className={cn(\"popup-form__error-text\", {\"popup-form__error-text_show\": !validationContext.validation[0]})}>{validationContext.validationText[0]}</span>\r\n                    <input onInput={onInput} ref={link} name=\"link\" id=\"1\" type=\"url\" className={cn(\"popup-form__text-input\", {\"popup-form__text-input_type_error\": !validationContext.validation[1]})} placeholder=\"Ссылка на картинку\" required />\r\n                    <span id=\"link-input-error\" className={cn(\"popup-form__error-text\", {\"popup-form__error-text_show\": !validationContext.validation[1]})}>{validationContext.validationText[1]}</span>\r\n                </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            noClose={noClose}\r\n    />\r\n    );\r\n}    \r\n\r\nexport default AddPlacePopup;","import cn from 'classnames';\r\n\r\nimport { useContext, useRef } from 'react';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ \r\n                        isOpen, \r\n                        onClose, \r\n                        onUpdateAvatar,\r\n                        noClose,\r\n                        onInput,\r\n                    }) \r\n    {\r\n    \r\n    const validationContext = useContext(ValidationContext);\r\n\r\n    const avatar = useRef('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (validationContext.isValid) {\r\n            onUpdateAvatar({\r\n                avatar: avatar.current.value\r\n            });\r\n            e.target.reset();\r\n        }    \r\n    } \r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='avatar' \r\n            title='Обновить аватар' \r\n            children={\r\n                <>\r\n                    <input onInput={onInput} name=\"avatar\" ref={avatar} id=\"0\" type=\"url\" className={cn(\"popup-form__text-input\", {\"popup-form__text-input_type_error\": !validationContext.validation[0]})} placeholder=\"Ссылка на картинку\" required />\r\n                    <span id=\"avatar-error\" className={cn(\"popup-form__error-text\", {\"popup-form__error-text_show\": !validationContext.validation[0]})}>{validationContext.validationText[0]}</span>\r\n                </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            noClose={noClose}\r\n        />\r\n    );\r\n}    \r\n\r\nexport default EditAvatarPopup;","import { useContext, useEffect, useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport cn from 'classnames';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\n\r\nfunction EditProfilePopup({ \r\n                            isOpen, \r\n                            onClose, \r\n                            onUpdateUser,\r\n                            noClose,\r\n                            onInput, \r\n                        }) \r\n    {\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const validationContext = useContext(ValidationContext);\r\n\r\n    const [name, setName] = useState(currentUser.name);\r\n    const [about, setAbout] = useState(currentUser.about);\r\n\r\n    useEffect(_ => {\r\n        setName(currentUser.name);\r\n        setAbout(currentUser.about);\r\n        }, [currentUser]\r\n    );\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (validationContext.isValid) {\r\n            onUpdateUser({\r\n                name,\r\n                about\r\n            });\r\n            e.target.reset();\r\n        }    \r\n    }\r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='profile' \r\n            title='Редактировать профиль' \r\n            children={\r\n            <>\r\n                <input onInput={onInput} name=\"name\" id=\"0\" type=\"text\" minLength=\"2\" maxLength=\"40\" value={name} onChange={(e) => setName(e.target.value)} className={cn(\"popup-form__text-input\", {\"popup-form__text-input_type_error\": !validationContext.validation[0]})} placeholder=\"Имя\" required />\r\n                <span id=\"name-input-error\" className={cn(\"popup-form__error-text\", {\"popup-form__error-text_show\": !validationContext.validation[0]})}>{validationContext.validationText[0]}</span>\r\n                <input onInput={onInput} name=\"about\" id=\"1\" type=\"text\" minLength=\"2\" maxLength=\"200\" value={about} onChange={(e) => setAbout(e.target.value)} className={cn(\"popup-form__text-input\", {\"popup-form__text-input_type_error\": !validationContext.validation[1]})} placeholder=\"О себе\" required />\r\n                <span id=\"about-input-error\" className={cn(\"popup-form__error-text\", {\"popup-form__error-text_show\": !validationContext.validation[1]})}>{validationContext.validationText[1]}</span>\r\n            </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            noClose={noClose}\r\n        />\r\n    );\r\n}    \r\n\r\nexport default EditProfilePopup;","import cn from 'classnames';\r\n\r\nfunction PopupWithImage({ \r\n                        isOpen,\r\n                        onClose,\r\n                        card,\r\n                        noClose\r\n                        }) \r\n    {\r\n\r\n    return (\r\n        <section id=\"view-image\" className={cn('popup popup_type_dark', {'popup_opened' : isOpen})} onClick={onClose}>\r\n            <div className=\"popup-image\" onClick={noClose}>\r\n                <button type=\"button\" name=\"Закрыть\" className=\"popup-image__close-button\" onClick={onClose}></button>\r\n                <img className=\"popup-image__image\" src={card.link} alt={`${card.name}`.Фото} />\r\n                <h3 className=\"popup-image__title\">{card.name}</h3>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithImage;","// import cn from 'classnames';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction PopupWithSubmit({ \r\n                        isOpen,\r\n                        onClose,\r\n                        noClose,\r\n                        onDeleteCard,\r\n                        card\r\n                    }) \r\n    {  \r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        onDeleteCard(card);   \r\n    } \r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='submit' \r\n            title='Вы уверены?' \r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            onSubmit={handleSubmit}\r\n            noClose={noClose}\r\n        />\r\n    );\r\n}    \r\n\r\nexport default PopupWithSubmit;","class Api {\r\n\r\n    constructor(options) {\r\n        this._headers = options.headers;            //Передаем заголовок\r\n        this._baseUrl = options.baseUrl;            //Передаем базовый URL\r\n    }\r\n\r\n    _sendRequest(link, params) {\r\n        return fetch(link, params)\r\n            .then((res) => { \r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка ${res.status} - ${res.statusText}`)\r\n            })\r\n    }\r\n\r\n    //редактирование профиля\r\n    editProfileInfo(data) {\r\n        return this._sendRequest(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        })\r\n    }\r\n    \r\n    //запрос данных профиля\r\n    getProfileInfo() {\r\n        return this._sendRequest(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers  \r\n        })\r\n    }\r\n    //редактирование аватара\r\n    editAvatar(srcLink) {\r\n        return this._sendRequest(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: srcLink\r\n            })\r\n        })\r\n    }\r\n    //отправка данных о новой карточке\r\n    createNewCard(cardInfo) {\r\n        return this._sendRequest(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: cardInfo.name,\r\n                link: cardInfo.link\r\n            })  \r\n        })\r\n    }\r\n    //удаление карточки\r\n    deleteCard(cardId) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n    }\r\n    //ставим лайк\r\n    changeLikeStatus(cardId, isLiked) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: (isLiked ? 'PUT' : 'DELETE'),\r\n            headers: this._headers\r\n        })\r\n    }\r\n\r\n    //запрос массива карточек\r\n    getInitialCards() {\r\n        return this._sendRequest(`${this._baseUrl}/cards`, {\r\n            headers: this._headers\r\n        })\r\n    }\r\n}\r\n\r\nconst api = new Api ({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-16',\r\n    headers: {\r\n        authorization: '83172f60-a4ab-4f2a-9396-1325bbd21612',\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\nexport default api;","import { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport PopupWithImage from './PopupWithImage';\r\nimport PopupWithSubmit from './PopupWithSubmit';\r\nimport CurrentUserContext from '../contexts/CurrentUserContext';\r\nimport ValidationContext from '../contexts/ValidationContext';\r\nimport LoadingState from '../contexts/LoadingState';\r\nimport api from '../utils/Api';\r\n\r\nfunction App() {\r\n\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n    const [isPopupWithSubmitOpen, setIsPopupWithSubmitOpen] = useState(false);\r\n    const [selectedCard, setSelectedCard] = useState(false);\r\n    const [loadingText, setLoadingText] = useState('');\r\n    const [card, setCard] = useState({});\r\n    const [cards, setCards] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState({});\r\n    const [validationContext, setvalidationContext] = useState({ validation: [], validationText: [], isValid: false});\r\n  \r\n    //Обработка ввода (установка глобального стейта валидации) подходит для любого числа элементов\r\n    //Элементам, которые требуется валидировать, нужно выставить уникальные id, положительные целые числа, начиная с 0\r\n    function handleInput(e) {\r\n        const validArr = validationContext.validation;\r\n        const textArr = validationContext.validationText;\r\n        let index = Number(e.target.id);\r\n        let resValid = 0;\r\n\r\n        validArr[index] = e.target.validity.valid;\r\n        textArr[index] = e.target.validationMessage;\r\n        \r\n        for (let i = 0; i < validArr.length; i++) {\r\n            resValid += Number(validArr[i]);\r\n        }\r\n\r\n        setvalidationContext({ validation: validArr, validationText: textArr, isValid: (resValid === validArr.length)})\r\n    }\r\n    //Закрытие модальных окон по Escape\r\n    function handleEscButton(e) {\r\n        if (e.key === 'Escape') {\r\n            closeAllPopups();\r\n        }\r\n    }\r\n    //Открытие формы редактирования аватара\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n        setLoadingText('Изменить');\r\n        //Устанавливаем параметры контекста для валидации текущей формы \r\n        //validation - массив содержит число элементов = числу валидируемых элементов формы, принимает значение validity.valid\r\n        //validationText - массив содержит число элементов = числу валидируемых элементов формы, принимает значение validationMessage\r\n        //isValid - булева величина, содержит результат валидации всех полей, true - если все поля валидны\r\n        setvalidationContext({ validation: [true], validationText: [''], isValid: false});\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n    //Открытие формы редактирования профиля\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n        setLoadingText('Сохранить');\r\n        //Устанавливаем параметры контекста для валидации текущей формы\r\n        setvalidationContext({ validation: [true, true], validationText: ['',''], isValid: true});\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n    //Открытие формы добавления карточки\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n        setLoadingText('Создать');\r\n        //Устанавливаем параметры контекста для валидации текущей формы\r\n        setvalidationContext({ validation: [true, true], validationText: ['',''], isValid: false});\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n    //Отмена всплытия для закрытия по клику по оверлею\r\n    function noClose(e) {\r\n        e.stopPropagation();\r\n    }\r\n    //Клик по картинке, открытие увеличенной картинки\r\n    function handleCardClick(card) {\r\n        setSelectedCard(true);\r\n        setCard(card);\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n    //Нажатие на кнопку удаления, открытие окна с подтверждением\r\n    function handleDeleteCardClick(card) {\r\n        setIsPopupWithSubmitOpen(true);\r\n        setLoadingText('Да');\r\n        setvalidationContext({ validation: [], validationText: [], isValid: true});\r\n        setCard(card);\r\n        document.addEventListener('keydown', handleEscButton);\r\n    }\r\n    //Чтение с сервера инфо пользователя, данных карточки\r\n    useEffect(() => {   \r\n        Promise.all([ \r\n            api.getProfileInfo(),    \r\n            api.getInitialCards()\r\n        ])\r\n        .then((values) => {    \r\n            const [profileInfo, cardList] = values;\r\n            setCurrentUser(profileInfo);\r\n            setCards(cardList);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [])\r\n    //Убрать/поставить лайк карточке\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n        api.changeLikeStatus(card._id, !isLiked)\r\n        .then((newCard) => {\r\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n            setCards(newCards);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    } \r\n    //Удаление карточки\r\n    function handleDeleteCard(card) {\r\n        setLoadingText('Удаление...');\r\n        api.deleteCard(card._id)\r\n        .then(() => {\r\n            const newCards = cards.filter((c) => c._id !== card._id);\r\n            setCards(newCards);\r\n            closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    //Смена инфо пользователя\r\n    function handleUpdateUser(userInfo) {\r\n        setLoadingText('Сохранение...');\r\n        api.editProfileInfo(userInfo)\r\n        .then((userInfo) => {\r\n            setCurrentUser(userInfo);\r\n            closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    //Смена аватара\r\n    function handleUpdateAvatar(user) {\r\n        setLoadingText('Сохранение...');\r\n        api.editAvatar(user.avatar)\r\n        .then((userInfo) => {\r\n            setCurrentUser(userInfo);\r\n            closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n    //Добавление карточки\r\n    function handleAddPlace(newCard) {\r\n        setLoadingText('Загрузка...');\r\n        api.createNewCard(newCard)\r\n        .then((newCard) => {\r\n            setCards([newCard, ...cards]);\r\n            closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    //Закрытие модальных окон, снятие слушателя Escape\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setIsPopupWithSubmitOpen(false);\r\n        setSelectedCard(false);\r\n        document.removeEventListener('keydown', handleEscButton);                   \r\n        setvalidationContext({ validation: [], validationText: [], isValid: false}); \r\n        setCard({});\r\n    }\r\n\r\n    return (\r\n      //Оборачиваем в контекст текущего пользователя\r\n        <CurrentUserContext.Provider value={currentUser}> \r\n            <Header />\r\n\r\n            <Main \r\n                onEditProfile={handleEditProfileClick} \r\n                onEditAvatar={handleEditAvatarClick} \r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardClick={handleCardClick}\r\n                onCardLike={handleCardLike}\r\n                onDeleteCard={handleDeleteCardClick}\r\n                cards={cards}\r\n            />\r\n\r\n            <Footer />\r\n\r\n            {/* Оборачиваем в контекст стейта валидации */}\r\n            <ValidationContext.Provider value={validationContext}>\r\n                <LoadingState.Provider value={loadingText}>\r\n                    <EditProfilePopup \r\n                        isOpen={isEditProfilePopupOpen} \r\n                        onClose={closeAllPopups} \r\n                        onUpdateUser={handleUpdateUser} \r\n                        noClose={noClose}\r\n                        onInput={handleInput}\r\n                    />\r\n\r\n                    <EditAvatarPopup \r\n                        isOpen={isEditAvatarPopupOpen} \r\n                        onClose={closeAllPopups} \r\n                        onUpdateAvatar={handleUpdateAvatar} \r\n                        noClose={noClose}\r\n                        onInput={handleInput}\r\n                    />\r\n\r\n                    <AddPlacePopup \r\n                        isOpen={isAddPlacePopupOpen} \r\n                        onClose={closeAllPopups} \r\n                        onAddPlace={handleAddPlace}\r\n                        noClose={noClose}\r\n                        onInput={handleInput}\r\n                    />\r\n                    \r\n                    <PopupWithSubmit  \r\n                        isOpen={isPopupWithSubmitOpen} \r\n                        onClose={closeAllPopups}\r\n                        noClose={noClose}\r\n                        onDeleteCard={handleDeleteCard}\r\n                        card={card}\r\n                    />\r\n                </LoadingState.Provider>   \r\n            </ValidationContext.Provider>\r\n\r\n            <PopupWithImage \r\n                isOpen={selectedCard}\r\n                onClose={closeAllPopups}\r\n                card={card}\r\n                noClose={noClose}\r\n            />\r\n        </CurrentUserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}