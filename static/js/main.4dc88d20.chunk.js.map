{"version":3,"sources":["images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","components/PopupWithImage.js","utils/Api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","createContext","Card","card","onCardClick","onLikeButtonClick","onCardDeleteClick","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","id","link","name","onClick","type","_","length","Main","onEditProfile","onEditAvatar","onAddPlace","handleCardLike","handleDeleteCard","cards","avatar","about","map","Footer","PopupWithForm","title","children","isOpen","onClose","buttonText","onSubmit","isOpenClassName","AddPlacePopup","useRef","ref","minLength","maxLength","placeholder","required","e","preventDefault","current","value","EditAvatarPopup","onUpdateAvatar","console","log","EditProfilePopup","onUpdateUser","useState","setName","setAbout","useEffect","onChange","target","PopupWithImage","cardData","Фото","api","options","this","_headers","headers","_baseUrl","baseUrl","params","fetch","then","res","ok","json","Promise","reject","status","statusText","data","_sendRequest","method","body","JSON","stringify","srcLink","cardInfo","cardId","authorization","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCardData","setCards","setCurrentUser","closeAllPopups","all","getProfileInfo","getInitialCards","values","profileInfo","cardList","catch","err","Provider","item","changeLikeStatus","newCard","newCards","c","deleteCard","filter","userInfo","editProfileInfo","user","editAvatar","newPlace","createNewCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dc88d20.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Лого\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { createContext } from 'react'\r\nexport const CurrentUserContext = createContext();","import { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card,\r\n                onCardClick,\r\n                onLikeButtonClick,\r\n                onCardDeleteClick }) \r\n    {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n    const isOwn = card.owner._id === currentUser._id;\r\n\r\n    function handleCardClick() {\r\n        onCardClick(card)\r\n    }\r\n\r\n    const cardDeleteButtonClassName = `element__trash-button ${isOwn ? 'element__trash-button_visible' : ''}`;\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    const cardLikeButtonClassName = `like__button ${isLiked ? 'like__button_pressed' : ''}`;\r\n        \r\n    return (\r\n        <>\r\n            <div className=\"element\" id={card.id}>\r\n                <img className=\"element__image\" src={card.link} alt={`${card.name}.Фото`} onClick={handleCardClick} />\r\n                <button type=\"button\" className={cardDeleteButtonClassName} onClick={_ => onCardDeleteClick(card)}></button>\r\n                <h3 className=\"element__text\">{card.name}</h3>\r\n                <div className=\"like\">\r\n                    <button type=\"button\" className={cardLikeButtonClassName} onClick={_ => onLikeButtonClick(card)}></button>\r\n                    <p className=\"like__count\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card;","import { useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Main({ \r\n            onEditProfile, \r\n            onEditAvatar, \r\n            onAddPlace,\r\n            onCardClick,\r\n            handleCardLike,\r\n            handleDeleteCard,\r\n            cards }) \r\n    {\r\n\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"avatar\" onClick={onEditAvatar}>\r\n                    <img className=\"avatar__img\" src={currentUser.avatar} alt=\"Аватар\" />\r\n                    <div className=\"avatar__edit-icon\"></div>\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <div>\r\n                        <h1 className=\"profile-info__name\">{currentUser.name}</h1>\r\n                        <p className=\"profile-info__description\">{currentUser.about}</p>\r\n                    </div>\r\n                    <button type=\"button\" className=\"profile-info__edit-button\" onClick={onEditProfile}></button>\r\n                </div>\r\n                <button type=\"button\" className=\"add-image-button\" onClick={onAddPlace}></button>\r\n            </section>\r\n            \r\n            <section className=\"elements\">\r\n                \r\n                {cards.map((card) => {\r\n                    return(\r\n                        <Card \r\n                            key={card._id} \r\n                            card={card} \r\n                            onCardClick={onCardClick} \r\n                            onLikeButtonClick={handleCardLike}\r\n                            onCardDeleteClick={handleDeleteCard}\r\n                        />\r\n                    )\r\n                })}\r\n\r\n            </section>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__logo\">© 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","function PopupWithForm({ \r\n                            name, \r\n                            title, \r\n                            children,\r\n                            isOpen,\r\n                            onClose,\r\n                            buttonText,\r\n                            onSubmit \r\n                        }) \r\n{\r\n    const isOpenClassName = (isOpen) ? ' popup_opened' : '';\r\n\r\n    return (\r\n        <>\r\n            <section id=\"profile-info__edit\" className={`popup popup_type_${name}${isOpenClassName}`}>\r\n                <form className=\"popup-form\" name={name} onSubmit={onSubmit}>\r\n                    <button type=\"button\" name=\"Закрыть\" className=\"popup-form__close-button\" onClick={onClose}></button>\r\n                    <h3 className=\"popup-form__title\">{title}</h3>\r\n                    {children}\r\n                    <button className=\"popup-form__submit-button\">{buttonText}</button>\r\n                </form>\r\n            </section>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({   \r\n                        isOpen, \r\n                        onClose, \r\n                        onAddPlace \r\n                        }) \r\n    {\r\n\r\n    const link = useRef('');\r\n    const name = useRef('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n      \r\n        onAddPlace({\r\n          link: link.current.value,\r\n          name: name.current.value\r\n        });\r\n      } \r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='place' \r\n            title='Новое место' \r\n            children={\r\n                <>\r\n                    <input ref={name} name=\"name\" id=\"image-input\" type=\"text\" minLength=\"1\" maxLength=\"40\" className=\"popup-form__text-input\" placeholder=\"Название\" required />\r\n                    <span id=\"image-input-error\" className=\"popup-form__error-text\"></span>\r\n                    <input ref={link} name=\"link\" id=\"link-input\" type=\"url\" className=\"popup-form__text-input\" placeholder=\"Ссылка на картинку\" required />\r\n                    <span id=\"link-input-error\" className=\"popup-form__error-text\"></span>\r\n                </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            buttonText='Создать'\r\n            onSubmit={handleSubmit}\r\n    />\r\n    );\r\n}    \r\n\r\nexport default AddPlacePopup;","import { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ \r\n                        isOpen, \r\n                        onClose, \r\n                        onUpdateAvatar \r\n                    }) \r\n    {\r\n\r\n    const avatar = useRef('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        \r\n        onUpdateAvatar({\r\n            avatar: avatar.current.value\r\n        });\r\n        console.log(avatar.current.value)\r\n      } \r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='avatar' \r\n            title='Обновить аватар' \r\n            children={\r\n                <>\r\n                    <input name=\"avatar\" ref={avatar} id=\"avatar\" type=\"url\" className=\"popup-form__text-input\" placeholder=\"Ссылка на картинку\" required />\r\n                    <span id=\"avatar-error\" className=\"popup-form__error-text\"></span>\r\n                </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            buttonText='Сохранить'\r\n            onSubmit={handleSubmit}\r\n        />\r\n    );\r\n}    \r\n\r\nexport default EditAvatarPopup;","import { useContext, useEffect, useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup({ \r\n                            isOpen, \r\n                            onClose, \r\n                            onUpdateUser \r\n                        }) \r\n    {\r\n    const currentUser = useContext(CurrentUserContext);\r\n\r\n    const [name, setName] = useState(currentUser.name);\r\n    const [about, setAbout] = useState(currentUser.about);\r\n\r\n    useEffect(_ => {\r\n        setName(currentUser.name);\r\n        setAbout(currentUser.about);\r\n        }, [currentUser]\r\n    );\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        onUpdateUser({\r\n            name,\r\n            about\r\n        });\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm \r\n            name='profile' \r\n            title='Редактировать профиль' \r\n            children={\r\n            <>\r\n                <input name=\"name\" id=\"name-input\" type=\"text\" minLength=\"2\" maxLength=\"40\" value={name} onChange={(e) => setName(e.target.value)} className=\"popup-form__text-input\" placeholder=\"Имя\" required />\r\n                <span id=\"name-input-error\" className=\"popup-form__error-text\"></span>\r\n                <input name=\"about\" id=\"about-input\" type=\"text\" minLength=\"2\" maxLength=\"200\" value={about} onChange={(e) => setAbout(e.target.value)} className=\"popup-form__text-input\" placeholder=\"О себе\" required />\r\n                <span id=\"about-input-error\" className=\"popup-form__error-text\"></span>\r\n            </>\r\n            }\r\n            isOpen={isOpen}\r\n            onClose={onClose}\r\n            buttonText='Сохранить'\r\n            onSubmit={handleSubmit}\r\n        />\r\n    );\r\n}    \r\n\r\nexport default EditProfilePopup;","function PopupWithImage({ \r\n                        isOpen,\r\n                        onClose,\r\n                        cardData\r\n                        }) \r\n    {\r\n    const isOpenClassName = (isOpen) ? 'popup_opened' : '';\r\n    return (\r\n        <section id=\"view-image\" className={`popup popup_type_dark ${isOpenClassName}`}>\r\n            <div className=\"popup-image\">\r\n                <button type=\"button\" name=\"Закрыть\" className=\"popup-image__close-button\" onClick={onClose}></button>\r\n                <img className=\"popup-image__image\" src={cardData.link} alt={`${cardData.name}`.Фото} />\r\n                <h3 className=\"popup-image__title\">{cardData.name}</h3>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithImage;","class Api {\r\n\r\n    constructor(options) {\r\n        this._headers = options.headers;            //Передаем заголовок\r\n        this._baseUrl = options.baseUrl;            //Передаем базовый URL\r\n    }\r\n\r\n    _sendRequest(link, params) {\r\n        return fetch(link, params)\r\n            .then((res) => { \r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка ${res.status} - ${res.statusText}`)\r\n            })\r\n    }\r\n\r\n    //редактирование профиля\r\n    editProfileInfo(data) {\r\n        return this._sendRequest(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        })\r\n    }\r\n    \r\n    //запрос данных профиля\r\n    getProfileInfo() {\r\n        return this._sendRequest(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers  \r\n        })\r\n    }\r\n    //редактирование аватара\r\n    editAvatar(srcLink) {\r\n        return this._sendRequest(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: srcLink\r\n            })\r\n        })\r\n    }\r\n    //отправка данных о новой карточке\r\n    createNewCard(cardInfo) {\r\n        return this._sendRequest(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: cardInfo.name,\r\n                link: cardInfo.link\r\n            })  \r\n        })\r\n    }\r\n    //удаление карточки\r\n    deleteCard(cardId) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n    }\r\n    //ставим лайк\r\n    changeLikeStatus(cardId, isLiked) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: (isLiked ? 'PUT' : 'DELETE'),\r\n            headers: this._headers\r\n        })\r\n    }\r\n\r\n    //запрос массива карточек\r\n    getInitialCards() {\r\n        return this._sendRequest(`${this._baseUrl}/cards`, {\r\n            headers: this._headers\r\n        })\r\n    }\r\n}\r\n\r\nconst api = new Api ({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-16',\r\n    headers: {\r\n        authorization: '83172f60-a4ab-4f2a-9396-1325bbd21612',\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\nexport default api;","import { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport PopupWithImage from './PopupWithImage';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext'\r\nimport api from '../utils/Api';\r\n\r\nfunction App() {\r\n\r\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n    const [selectedCard, setSelectedCard] = useState(false);\r\n    const [cardData, setCardData] = useState({name: '', link: ''});\r\n    const [cards, setCards] = useState([]);\r\n    const [currentUser, setCurrentUser] = useState({});\r\n\r\n    function handleEditAvatarClick() {\r\n        setIsEditAvatarPopupOpen(true);\r\n    }\r\n\r\n    function handleEditProfileClick() {\r\n        setIsEditProfilePopupOpen(true);\r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setIsAddPlacePopupOpen(true);\r\n    }\r\n\r\n    function handleCardClick(item) {\r\n        setSelectedCard(true);\r\n        setCardData({name: item.name, link: item.link});\r\n    }\r\n\r\n    useEffect(() => {   \r\n        Promise.all([ \r\n            api.getProfileInfo(),    \r\n            api.getInitialCards()\r\n        ])\r\n        .then((values) => {    \r\n            const [profileInfo, cardList] = values;\r\n            setCurrentUser(profileInfo);\r\n            setCards(cardList);\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }, [])\r\n\r\n\r\n    function handleCardLike(card) {\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n        api.changeLikeStatus(card._id, !isLiked).then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n        });\r\n    } \r\n\r\n    function handleDeleteCard(card) {\r\n        api.deleteCard(card._id)\r\n        .then(() => {\r\n        const newCards = cards.filter((c) => c._id !== card._id);\r\n        setCards(newCards);\r\n        });\r\n    } \r\n\r\n    function handleUpdateUser(userInfo) {\r\n        console.log(userInfo)\r\n        api.editProfileInfo(userInfo)\r\n        .then((userInfo) => {\r\n            setCurrentUser(userInfo);\r\n            closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    function handleUpdateAvatar(user) {\r\n        console.log(user.avatar);\r\n        api.editAvatar(user.avatar)\r\n        .then((userInfo) => {\r\n            setCurrentUser(userInfo);\r\n            closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    function handleAddPlace(newPlace) {\r\n        api.createNewCard(newPlace)\r\n        .then((newPlace) => {\r\n            setCards([newPlace, ...cards]);\r\n            closeAllPopups();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    function closeAllPopups() {\r\n        setIsEditAvatarPopupOpen(false);\r\n        setIsEditProfilePopupOpen(false);\r\n        setIsAddPlacePopupOpen(false);\r\n        setCardData({name: '', link: ''});\r\n        setSelectedCard(false);\r\n    }\r\n\r\n    return (\r\n      \r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <Header />\r\n\r\n            <Main \r\n                onEditProfile={handleEditProfileClick} \r\n                onEditAvatar={handleEditAvatarClick} \r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardClick={handleCardClick}\r\n                handleCardLike={handleCardLike}\r\n                handleDeleteCard={handleDeleteCard}\r\n                cards={cards}\r\n            />\r\n\r\n            <Footer />\r\n\r\n            <EditProfilePopup \r\n                isOpen={isEditProfilePopupOpen} \r\n                onClose={closeAllPopups} \r\n                onUpdateUser={handleUpdateUser} \r\n            />\r\n\r\n            <EditAvatarPopup \r\n                isOpen={isEditAvatarPopupOpen} \r\n                onClose={closeAllPopups} \r\n                onUpdateAvatar={handleUpdateAvatar} \r\n            />\r\n\r\n            <AddPlacePopup \r\n                isOpen={isAddPlacePopupOpen} \r\n                onClose={closeAllPopups} \r\n                onAddPlace={handleAddPlace} \r\n            />\r\n            \r\n            {/* <PopupWithForm name='image' title='Вы уверены?' /> */}\r\n\r\n            <PopupWithImage \r\n                isOpen={selectedCard}\r\n                onClose={closeAllPopups}\r\n                cardData={cardData}\r\n            />\r\n        </CurrentUserContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}