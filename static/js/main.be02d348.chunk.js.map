{"version":3,"sources":["images/logo.svg","components/Header.js","utils/Api.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupWithImage.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","api","options","this","_headers","headers","_baseUrl","baseUrl","link","params","fetch","then","res","ok","json","Promise","reject","status","statusText","data","_sendRequest","method","body","JSON","stringify","name","about","srcLink","avatar","cardInfo","cardId","authorization","Card","props","id","item","onClick","onCardClick","type","likes","length","Main","React","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","undefined","cards","setCards","useEffect","all","getProfileInfo","getInitialCards","values","userInfo","cardsList","catch","err","console","log","onEditAvatar","onEditProfile","onAddPlace","map","card","_id","Footer","PopupWithForm","openedPopupModifier","isOpen","onClose","title","children","disabled","buttonText","PopupWithImage","cardData","Фото","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","setCardData","closeAllPopups","placeholder","required","minLength","maxLength","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be02d348.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Лого\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","class Api {\r\n\r\n    constructor(options) {\r\n        this._headers = options.headers;            //Передаем заголовок\r\n        this._baseUrl = options.baseUrl;            //Передаем базовый URL\r\n    }\r\n\r\n    _sendRequest(link, params) {\r\n        return fetch(link, params)\r\n            .then((res) => { \r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка ${res.status} - ${res.statusText}`)\r\n            })\r\n    }\r\n\r\n    //редактирование профиля\r\n    editProfileInfo(data) {\r\n        return this._sendRequest(`${this._baseUrl}/users/me`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: data.name,\r\n                about: data.about\r\n            })\r\n        })\r\n    }\r\n    \r\n    //запрос данных профиля\r\n    getProfileInfo() {\r\n        return this._sendRequest(`${this._baseUrl}/users/me`, {\r\n            headers: this._headers  \r\n        })\r\n    }\r\n    //редактирование аватара\r\n    editAvatar(srcLink) {\r\n        return this._sendRequest(`${this._baseUrl}/users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                avatar: srcLink\r\n            })\r\n        })\r\n    }\r\n    //отправка данных о новой карточке\r\n    createNewCard(cardInfo) {\r\n        return this._sendRequest(`${this._baseUrl}/cards`, {\r\n            method: 'POST',\r\n            headers: this._headers,\r\n            body: JSON.stringify({\r\n                name: cardInfo.name,\r\n                link: cardInfo.link\r\n            })  \r\n        })\r\n    }\r\n    //удаление карточки\r\n    deleteCard(cardId) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers\r\n        })\r\n    }\r\n    //ставим лайк\r\n    setLike(cardId) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: 'PUT',\r\n            headers: this._headers\r\n        })\r\n    }\r\n    //удаляем лайк\r\n    removeLike(cardId) {\r\n        return this._sendRequest(`${this._baseUrl}/cards/likes/${cardId}`, {\r\n            method: 'DELETE',\r\n            headers: this._headers,\r\n        })\r\n    }\r\n    //запрос массива карточек\r\n    getInitialCards() {\r\n        return this._sendRequest(`${this._baseUrl}/cards`, {\r\n            headers: this._headers\r\n        })\r\n    }\r\n}\r\n\r\nconst api = new Api ({\r\n    baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-16',\r\n    headers: {\r\n        authorization: '83172f60-a4ab-4f2a-9396-1325bbd21612',\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\nexport default api;","function Card(props) {\r\n\r\n    function handleCardClick() {\r\n        props.onCardClick(props.item)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"element\" id={props.item.id}>\r\n                <img className=\"element__image\" src={props.item.link} alt={`${props.item.name}.Фото`} onClick={handleCardClick} />\r\n                <button type=\"button\" className=\"element__trash-button element__trash-button_visible\"></button>\r\n                <h3 className=\"element__text\">{props.item.name}</h3>\r\n                <div className=\"like\">\r\n                    <button type=\"button\" className=\"like__button\"></button>\r\n                    <p className=\"like__count\">{props.item.likes.length}</p>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport api from '../utils/Api.js';\r\nimport Card from './Card.js';\r\n\r\nfunction Main(props) {\r\n\r\n    const [userName, setUserName] = React.useState('');\r\n    const [userDescription, setUserDescription] = React.useState('');\r\n    const [userAvatar, setUserAvatar] = React.useState('');\r\n\r\n    const [cards, setCards] = React.useState(undefined);\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([     \r\n            api.getProfileInfo(),\r\n            api.getInitialCards()\r\n        ])\r\n            .then((values) => {    \r\n                const [userInfo, cardsList] = values;\r\n                setUserName(userInfo.name);\r\n                setUserDescription(userInfo.about);\r\n                setUserAvatar(userInfo.avatar);\r\n                setCards(cardsList);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [])   //добавляем пустой массив вторым аргументом для монтирования\r\n\r\n    return (\r\n        <main className=\"content\">\r\n            <section className=\"profile\">\r\n                <div className=\"avatar\" onClick={props.onEditAvatar}>\r\n                    <img className=\"avatar__img\" src={userAvatar} alt=\"Аватар\" />\r\n                    <div className=\"avatar__edit-icon\"></div>\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <div>\r\n                        <h1 className=\"profile-info__name\">{userName}</h1>\r\n                        <p className=\"profile-info__description\">{userDescription}</p>\r\n                    </div>\r\n                    <button type=\"button\" className=\"profile-info__edit-button\" onClick={props.onEditProfile}></button>\r\n                </div>\r\n                <button type=\"button\" className=\"add-image-button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n            \r\n            <section className=\"elements\">\r\n                \r\n                {cards && cards.map((card) => {\r\n                    return(\r\n                        <Card key={card._id} item={card} onCardClick={props.onCardClick}/>   //прокидываем колбэк в карточку\r\n                    )\r\n                })}\r\n\r\n            </section>\r\n\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Main;","function Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__logo\">© 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","function PopupWithForm(props) {\r\n    const openedPopupModifier = (props.isOpen) ? ' popup_opened' : '';\r\n\r\n    return (\r\n        <>\r\n            <section id=\"profile-info__edit\" className={`popup popup_type_${props.name}${openedPopupModifier}`}>\r\n                <form className=\"popup-form\" name={props.name}>\r\n                    <button type=\"button\" name=\"Закрыть\" className=\"popup-form__close-button\" onClick={props.onClose}></button>\r\n                    <h3 className=\"popup-form__title\">{props.title}</h3>\r\n                    {props.children}\r\n                    <button className=\"popup-form__submit-button popup-form__submit-button_disabled\" disabled>{props.buttonText}</button>\r\n                </form>\r\n            </section>            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","function PopupWithImage(props) {\r\n    const isOpen = (props.isOpen) ? ' popup_opened' : '';\r\n    return (\r\n        <section id=\"view-image\" className={`popup popup_type_dark popup_type_${props.name}${isOpen}`}>\r\n            <div className=\"popup-image\">\r\n                <button type=\"button\" name=\"Закрыть\" className=\"popup-image__close-button\" onClick={props.onClose}></button>\r\n                <img className=\"popup-image__image\" src={props.cardData.link} alt={`${props.cardData.name}`.Фото} />\r\n                <h3 className=\"popup-image__title\">{props.cardData.name}</h3>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithImage;","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithForm from './PopupWithForm.js';\nimport PopupWithImage from './PopupWithImage.js';\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\n    const [selectedCard, setSelectedCard] = React.useState(false);\n    const [cardData, setCardData] = React.useState({name: '', link: ''});\n\n    function handleEditAvatarClick() {\n        setIsEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(item) {\n        setSelectedCard(true);\n        setCardData({name: item.name, link: item.link});\n    }\n\n    function closeAllPopups() {\n        setIsEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n        setCardData({name: '', link: ''});\n        setSelectedCard(false);\n    }\n\n    return (\n      \n        <>\n            <Header />\n\n            <Main \n                onEditProfile={handleEditProfileClick} \n                onEditAvatar={handleEditAvatarClick} \n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n            />\n\n            <Footer />\n\n            <PopupWithForm \n                name='avatar' \n                title='Обновить аватар' \n                children={\n                    <>\n                        <input name=\"avatar\" id=\"avatar\" type=\"url\" className=\"popup-form__text-input\" placeholder=\"Ссылка на картинку\" required />\n                        <span id=\"avatar-error\" className=\"popup-form__error-text\"></span>\n                    </>\n                }\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                buttonText='Сохранить'\n            />\n            <PopupWithForm \n                name='profile' \n                title='Редактировать профиль' \n                children={\n                    <>\n                        <input name=\"name\" id=\"name-input\" type=\"text\" minLength=\"2\" maxLength=\"40\" className=\"popup-form__text-input\" placeholder=\"Имя\" required />\n                        <span id=\"name-input-error\" className=\"popup-form__error-text\"></span>\n                        <input name=\"about\" id=\"about-input\" type=\"text\" minLength=\"2\" maxLength=\"200\" className=\"popup-form__text-input\" placeholder=\"О себе\" required />\n                        <span id=\"about-input-error\" className=\"popup-form__error-text\"></span>\n                    </>\n                    }\n                    isOpen={isEditProfilePopupOpen}\n                    onClose={closeAllPopups}\n                    buttonText='Сохранить'\n            />\n            <PopupWithForm \n                name='place' \n                title='Новое место' \n                children={\n                    <>\n                        <input name=\"name\" id=\"image-input\" type=\"text\" minLength=\"1\" maxLength=\"40\" className=\"popup-form__text-input\" placeholder=\"Название\" required />\n                        <span id=\"image-input-error\" className=\"popup-form__error-text\"></span>\n                        <input name=\"link\" id=\"link-input\" type=\"url\" className=\"popup-form__text-input\" placeholder=\"Ссылка на картинку\" required />\n                        <span id=\"link-input-error\" className=\"popup-form__error-text\"></span>\n                    </>\n                }\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n                buttonText='Создать'\n            />\n            \n            {/* <PopupWithForm name='image' title='Вы уверены?' /> */}\n\n            <PopupWithImage \n                isOpen={selectedCard}\n                onClose={closeAllPopups}\n                cardData={cardData}\n            />\n        </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}